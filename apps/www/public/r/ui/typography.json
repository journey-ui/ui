{
  "name": "typography",
  "type": "registry:ui",
  "dependencies": [
    "class-variance-authority",
    "@radix-ui/react-slot"
  ],
  "files": [
    {
      "path": "ui/typography.tsx",
      "type": "registry:ui",
      "content": "\"import * as React from \\\"react\\\"\\r\\nimport { cva, type VariantProps } from \\\"class-variance-authority\\\"\\r\\nimport { Slot } from \\\"@radix-ui/react-slot\\\"\\r\\n\\r\\nimport { cn } from \\\"@/registry/lib/utils\\\"\\r\\n\\r\\nconst typographyVariants = cva(\\r\\n  \\\"\\\",\\r\\n  {\\r\\n    variants: {\\r\\n      variant: {\\r\\n        // Display\\r\\n        d1: \\\"text-[64px] leading-auto font-black\\\",\\r\\n        d2: \\\"text-[48px] leading-[56px] font-black\\\",\\r\\n        \\r\\n        // Headline\\r\\n        h1: \\\"text-[32px] leading-[40px] font-extrabold\\\",\\r\\n        h2: \\\"text-[24px] leading-[32px] font-extrabold\\\", \\r\\n        h3: \\\"text-[16px] leading-[24px] font-extrabold\\\",\\r\\n        \\r\\n        // Title\\r\\n        t1: \\\"text-[24px] leading-[32px] font-extrabold\\\",\\r\\n        t2: \\\"text-[18px] leading-[22px] font-extrabold\\\",\\r\\n        \\r\\n        // Subtitle\\r\\n        s1: \\\"text-[20px] leading-[28px] font-extrabold\\\",\\r\\n        s2: \\\"text-[18px] leading-[26px] font-extrabold\\\",\\r\\n        \\r\\n        // Paragraph\\r\\n        p1: \\\"text-[16px] leading-[24px] font-normal\\\",\\r\\n        p1b: \\\"text-[16px] leading-[24px] font-bold\\\",\\r\\n        p2: \\\"text-[14px] leading-[22px] font-normal\\\",\\r\\n        p2b: \\\"text-[14px] leading-[22px] font-bold\\\",\\r\\n        p3: \\\"text-[12px] leading-[20px] font-normal\\\",\\r\\n        p3b: \\\"text-[12px] leading-[20px] font-bold\\\",\\r\\n        \\r\\n        // Caption\\r\\n        c1: \\\"text-[10px] leading-[18px] font-normal\\\",\\r\\n      },\\r\\n    },\\r\\n    defaultVariants: {\\r\\n      variant: \\\"p1\\\",\\r\\n    },\\r\\n  }\\r\\n)\\r\\n\\r\\nconst defaultElements: Record<string, keyof React.JSX.IntrinsicElements> = {\\r\\n  d1: \\\"h1\\\",\\r\\n  d2: \\\"h1\\\",\\r\\n  h1: \\\"h1\\\",\\r\\n  h2: \\\"h2\\\",\\r\\n  h3: \\\"h3\\\",\\r\\n  t1: \\\"h4\\\",\\r\\n  t2: \\\"h5\\\",\\r\\n  s1: \\\"h6\\\",\\r\\n  s2: \\\"h6\\\",\\r\\n  p1: \\\"p\\\",\\r\\n  p1b: \\\"p\\\",\\r\\n  p2: \\\"p\\\",\\r\\n  p2b: \\\"p\\\",\\r\\n  p3: \\\"p\\\",\\r\\n  p3b: \\\"p\\\",\\r\\n  c1: \\\"span\\\",\\r\\n}\\r\\n\\r\\nexport interface TypographyProps\\r\\n  extends React.HTMLAttributes<HTMLElement>,\\r\\n    VariantProps<typeof typographyVariants> {\\r\\n  asChild?: boolean\\r\\n  as?: keyof React.JSX.IntrinsicElements\\r\\n}\\r\\n\\r\\nconst Typography = React.forwardRef<HTMLElement, TypographyProps>(\\r\\n  ({ className, variant = \\\"p1\\\", asChild = false, as, ...props }, ref) => {\\r\\n    const Comp = asChild \\r\\n      ? Slot \\r\\n      : (as || defaultElements[variant!] || \\\"p\\\") as React.ElementType\\r\\n    \\r\\n    return (\\r\\n      <Comp\\r\\n        className={cn(typographyVariants({ variant, className }))}\\r\\n        ref={ref}\\r\\n        {...props}\\r\\n      />\\r\\n    )\\r\\n  }\\r\\n)\\r\\nTypography.displayName = \\\"Typography\\\"\\r\\n\\r\\nexport { Typography, typographyVariants }\""
    }
  ]
}